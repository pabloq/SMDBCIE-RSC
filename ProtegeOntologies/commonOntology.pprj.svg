<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg height="517.0150" name="snapshot" onload="LoadHandler(evt)" onzoom="zoomHandler(evt)" width="666.0" xmlns="http://www.w3.org/2000/svg"><AttributeMap name="Node Type" value="node color"/><defs/><g id="displayBean" transform="matrix(1.0531655844155843,0.0,0.0,1.0531655844155843,-17.704139610389575,24.06483360389609)"><image visibility="hidden"><![CDATA[ffd8ffe000104a46494600010200000100010000ffdb004300080606070605080707070909080a0c140d0c0b0b0c1912130f141d1a1f1e1d1a1c1c20242e2720222c231c1c2837292c30313434341f27393d38323c2e333432ffdb0043010909090c0b0c180d0d1832211c213232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232ffc0001108004d006403012200021101031101ffc4001f0000010501010101010100000000000000000102030405060708090a0bffc400b5100002010303020403050504040000017d01020300041105122131410613516107227114328191a1082342b1c11552d1f02433627282090a161718191a25262728292a3435363738393a434445464748494a535455565758595a636465666768696a737475767778797a838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4c5c6c7c8c9cad2d3d4d5d6d7d8d9dae1e2e3e4e5e6e7e8e9eaf1f2f3f4f5f6f7f8f9faffc4001f0100030101010101010101010000000000000102030405060708090a0bffc400b51100020102040403040705040400010277000102031104052131061241510761711322328108144291a1b1c109233352f0156272d10a162434e125f11718191a262728292a35363738393a434445464748494a535455565758595a636465666768696a737475767778797a82838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4c5c6c7c8c9cad2d3d4d5d6d7d8d9dae2e3e4e5e6e7e8e9eaf2f3f4f5f6f7f8f9faffda000c03010002110311003f00f7e665452cc70075350fdb21f56ffbe1bfc29b7e48b2723a82bfcc5453a5bdb05335d3461db6a962a327f2a96df41ab7527fb643eadff7c37f851f6c87d5bfef86ff000aadbacbfe7fd7fefb4ff0aaa6f2dc7f14a7af4922ff001a8e77e43b234fed90fab7fdf0dfe148d7b1052577b1f4d87fc2aa452d9c91239bbf2cb004a33a657d8e2a68a2826cf95745f1d76b29c7e94f9a4f6b0590c5d498dc796d6b208f38f37a8e9d71d7d2acfdb21f56ff00be1bfc298d6a8aa59a69000324f1fe155d24b19115d6fd4ab0c83bd7fc286e4b70b22dfdb21f56ff00be1bfc28fb643eadff007c37f85674b736d1c85565791400772c91ff005c52dbdd5acc583cb24380399248f9fa609a5cefc82c8d0fb643eadff7c37f85392e2291b6ab1cfa15233f9d555168ec152f4331e803a927f4a718bc9bdb601d98316fbd8ec3e9ef549c98348bb4514559256d43fe3c64fc3f98a8f53ff511ff00d74fe86a4d43fe3c64fc3f98a8f53ff511ff00d74fe86b3abf04bd0a8ee8cda28a2bc83ac2ae697febe7ff00753f9b553ab9a5ff00af9ffdd4fe6d5d186fe2222a7c269d73b0ff00a88ffdd1fcaba2ae761ff511ff00ba3f956d8cd919d1ea3e8a28ae1371d17faf8bfeba2ff315a93ffc7f5aff00c0ff009565c5febe2ffae8bfcc56a4ff00f1fd6bff0003fe55e8617e07ea73d5f88b345145759915b50ff8f193f0fe629ba8a3bc09b14b61f240193d0d3b50ff008f193f0fe62acd4ca3cc9a634eda985e54bff3c65ffbf67fc28f2a5ff9e32ffdfb3fe15bb4573fd521dd9a7b66617952ff00cf197fefd9ff000ab9a6c6e92cccc8ca0850370c6719ff001ad1a2aa9e1e3097326295472560ac08e199624530cb90003f21adfa2aead2552d7263371d8c2f2a5ff9e32ffdfb3fe147952ffcf197fefd9ff0adda2b2faa43bb2fdb3316186533c7fba9061c124a103835a33ffc7f5aff00c0ff009559aad3ff00c7f5affc0ff956b4e9aa6ac88949c9dd9668a28ad492b6a1ff001e327e1fcc559aada87fc78c9f87f3156697500a28a29805145140051451400514514005569ffe3fad7fe07fcaacd569ff00e3fad7fe07fca9302cd14514c0ada87fc78c9f87f315669b246b2a1471953d4557fecdb4ff009e47fefb6ff1a5a816a8aabfd9b69ff3c8ff00df6dfe347f66da7fcf23ff007db7f8d1a8cb54555fecdb4ff9e47fefb6ff001a3fb36d3fe791ff00bedbfc68d40b54555fecdb4ff9e47fefb6ff001a3fb36d3fe791ff00bedbfc68d40b54555fecdb4ff9e47fefb6ff001a3fb36d3fe791ff00bedbfc68d40b555a7ff8feb5ff0081ff002a4fecdb4ff9e47fefb6ff001a7c5676f0bef8e3c37a9627f9d1a813d14514c47fffd9]]></image><g id="nodes_and_labels"><rect fill="rgb(249,238,211)" height="500.0" id=":THING" onmousemove="mousemoveHandler(evt)" panelMode="Children" rx="15.0" ry="15.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.8560000000000001,0.0,0.0,0.8560000000000001,58.5,19.55000000000001)" visibility="visible" width="641.0"><transform height="0.8560000000000001" scaleX="58.5" scaleY="19.55000000000001" width="0.0" x="0.8560000000000001" y="0.0"/><focus>false</focus><title>:THING (System Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.8560000000000001,0.0,0.0,0.8560000000000001,58.5,19.55000000000001)" x="28.0" y="28.064453125">:THING<title>:THING (System Class)</title></text><rect fill="rgb(245,224,171)" height="500.0" id="Predicate" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="15.0" ry="15.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.297888,0.0,0.0,0.297888,372.238,72.84214594575809)" visibility="visible" width="640.0"><transform height="0.348" scaleX="366.5163551401869" scaleY="62.25717984317532" width="0.0" x="0.348" y="0.0"/><parentId>312</parentId><focus>false</focus><title>Predicate (Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.297888,0.0,0.0,0.297888,372.238,72.84214594575809)" x="34.0" y="28.064453125">Predicate<title>Predicate (Class)</title></text><rect fill="rgb(245,224,171)" height="500.0" id="Concept" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="15.0" ry="15.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.297888,0.0,0.0,0.297888,102.874,72.84214594575809)" visibility="visible" width="640.0"><transform height="0.348" scaleX="51.83878504672896" scaleY="62.25717984317532" width="0.0" x="0.348" y="0.0"/><parentId>312</parentId><focus>false</focus><title>Concept (Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.297888,0.0,0.0,0.297888,102.874,72.84214594575809)" x="31.0" y="28.064453125">Concept<title>Concept (Class)</title></text></g><g id="arcs"/></g><g name="non_display" visibility="hidden" xmlns=""><g name="info" visibility="hidden"><text name="userName">Armando</text><text name="prjName">commonOntology</text><text name="timeStamp">mi√©, 14 oct 2009 16:22:21 -0600</text><text name="userComment">[no comment entered]</text><text id="currentScale">1.0531655844155843</text></g><text name="cprels">has subclass|has instance</text><text name="focusedNodeID">-1</text><text height="490.9009633911369" name="screenCoord" width="632.3791907514452" x="16.810404624277425" y="-22.84999999999999"/><g id="displayFilters" name="displayFilters"><text id="filter_0" name="filter_0">nominal attribute|artifact filter|Node Type|java.lang.String</text><text id="filter_1" name="filter_1">nominal attribute|relationship filter|Arc Type|java.lang.String</text></g><g id="dataFilters" name="dataFilters"><text id="filter_0" name="filter_0">nominal attribute|artifact type string filter|Node Type|java.lang.String</text><text id="filter_1" name="filter_1">nominal attribute|relationship type string filter|Arc Type|java.lang.String</text></g></g><script><![CDATA[var svgSVGElement;var ZOOM_FACTOR_IN = 1.10;var ZOOM_FACTOR_OUT = 1.0/ZOOM_FACTOR_IN;var ZOOM_DIRECTION_IN = "in"var ZOOM_DIRECTION_OUT = "out"var ZOOM_KEY_IN = "Z"var ZOOM_KEY_OUT = "X"var ZOOM_TIMEOUT = 50; // millisecondsvar zoomFactor;var zoomDirection;var zooming = false;var mouseLocX = 0.0;var mouseLocY = 0.0;var ABSOLUTE_ARC_WIDTH = 2.0;var newScale = 1.0;var newTransX = 0.0;var newTransY = 0.0;function dumpProps(obj, parent) {   for (var i in obj) {      if (parent) { msg = parent + "." + i + "\n" + obj[i]; } else { var msg = i + "\n" + obj[i]; }      if (!confirm(msg)) { return; }      if (typeof obj[i] == "object") {          if (parent) { dumpProps(obj[i], parent + "." + i); } else { dumpProps(obj[i], i); }      }   }}function LoadHandler (evt) { 	if ( window.svgDocument == null ) {		svgDocument = evt.target.ownerDocument;	}	svgSVGElement = svgDocument.getDocumentElement();	new Title (svgDocument, 12); 	var currentScale = svgDocument.getElementById("currentScale");	var cscale = currentScale.getFirstChild().getNodeValue();	//alert("displaybean scale "+cscale);	var svgscale = svgSVGElement.getCurrentScale();	//alert("svg startup scale "+svgscale);	adjustArcWidths(cscale);// 	setTimeout('adjustArcWidths(cscale)', 10);	 }  function zoomHandler(evt) { 	Title_Zoom(evt);		var cscale = svgSVGElement.getCurrentScale();	//alert("zooming...true svg scale: "+ cscale);	adjustArcWidths(cscale);// 	setTimeout("adjustArcWidths(csale)", 100);	//setTimeout('adjustCommentBox()', 100); }  // update the thickness of the arcs so that they always appear the  // same thickness no matter what the current scale is  function adjustArcWidths (cs) {	//alert("pass in scale " + cs); 	// look for line elements	var lineElements = svgDocument.getElementsByTagName ("line");//	var cs = svgSVGElement.getCurrentScale();	if((cs<=1)){	   return;	}	if(cs>=2){	   cs = cs*2;		}	var newStrokeWidth = ABSOLUTE_ARC_WIDTH/cs;	for (var i = 0; i<lineElements.getLength(); i++) {		var lineElement = lineElements.item(i);		var strokeWidth = lineElement.getAttribute ("stroke-width");		// do not let stroke too thick 		if(newStrokeWidth>=0.4){		  newStrokeWidth = 0.1;		}		if(newStrokeWidth<=0.1){		  newStrokeWidth = 0.2;		}			   lineElement.setAttribute ("stroke-width", "" + newStrokeWidth);	}//   	alert("draw stroke width: " + newStrokeWidth); }   function adjustCommentBox () {	var commentTransElement = svgDocument.getElementById ("commentTranslate");	var commentScaleElement = svgDocument.getElementById ("commentScale");  	var currSVGScale = svgSVGElement.currentScale;	var newCommentScale = 1.0/currSVGScale;	var currSVGTransX = svgSVGElement.currentTranslate.x	var currSVGTransY = svgSVGElement.currentTranslate.y	var newCommentTransX =  - currSVGTransX;	var newCommentTransY =  - currSVGTransY;	commentScaleElement.setAttribute("transform", "scale(" + newCommentScale + ")");	commentTransElement.setAttribute("transform", "translate(" + newCommentTransX + "," + newCommentTransY + ")"); }  function keyupHandler (keyEvent) {	// Get the character-code of the key that was pressed.	var key = keyEvent.keyCode;	// Get string equivalent of input character-code.	var input_text = String.fromCharCode(key);	//window.status = input_text + "up";	if (zooming && zoomDirection == ZOOM_DIRECTION_IN && input_text == ZOOM_KEY_IN) {  		// zoom in  		zooming = false;	} else if (zooming && zoomDirection == ZOOM_DIRECTION_OUT && input_text == ZOOM_KEY_OUT) {		// zoom out  		zooming = false;	} else {		// do nothing	}}function keydownHandler (keyEvent) {	// Get the character-code of the key that was pressed.	var key = keyEvent.keyCode;	// Get string equivalent of input character-code.	var input_text = String.fromCharCode(key);	//window.status = input_text + "down";	if (input_text == ZOOM_KEY_IN) {  		// start zooming in  		zoomDirection = ZOOM_DIRECTION_IN;  		zoomFactor = ZOOM_FACTOR_IN;  		zooming = true;	} else if (input_text == ZOOM_KEY_OUT) {		// start zooming out		zoomDirection = ZOOM_DIRECTION_OUT  		zoomFactor = ZOOM_FACTOR_OUT;  		zooming = true;	} else {		zooming = false;	}	// keep zooming until a keyup event is thrown	//if (zooming) {		//setTimeout('zoomOneStep()', ZOOM_TIMEOUT);	//}	zoomOneStep();}function mousemoveHandler (evt) {		mouseLocX = evt.getClientX();	mouseLocY = evt.getClientY();	var currScale = svgSVGElement.currentScale;	var currTransX = svgSVGElement.currentTranslate.x;	var currTransY = svgSVGElement.currentTranslate.y;	var absoluteX = (mouseLocX - currTransX) / currScale;	var absoluteY = (mouseLocY - currTransY) / currScale;	var scaleAndTransform = "scale: " +  svgSVGElement.currentScale + "  translate: " + svgSVGElement.currentTranslate.x + "," + svgSVGElement.currentTranslate.y;	var mouseLocationTransformed = "mouseLocation (transformed): " + mouseLocX + "," + mouseLocY;	var mouseLocationAbsolute = "mouseLocation (absolute): " + absoluteX + "," + absoluteY;	//window.status = scaleAndTransform + "  -  " + mouseLocationTransformed + "  -  " + mouseLocationAbsolute;	Title.Activate(evt);}function zoomOneStep () {  	var oldScale = svgSVGElement.currentScale;  	var oldTransX = svgSVGElement.currentTranslate.x  	var oldTransY = svgSVGElement.currentTranslate.y  	newScale = oldScale; 	newTransX = oldTransX; 	newTransY = oldTransY; 	var oldAbsoluteX = (mouseLocX - oldTransX) / oldScale;	var oldAbsoluteY = (mouseLocY - oldTransY) / oldScale;  	newScale = oldScale * zoomFactor;	// we want the absolute point under the mouse to stay in the same place	//ie. the absolute position of the mouse should be the same when done	newTransX = mouseLocX - newScale * oldAbsoluteX;	newTransY = mouseLocY - newScale * oldAbsoluteY;		// set the new scale and translation  	svgSVGElement.currentScale = newScale;	svgSVGElement.currentTranslate.x = newTransX;  	svgSVGElement.currentTranslate.y = newTransY;}// == Title.js -- Copyright (C) Stefan Goessner ========================function Title(doc, sz) {   this.element = null;  // element to show title of ..   Title.size = sz;      // text size ..   Title.oldScale = document.getDocumentElement().getCurrentScale();     // scaling modified by zooming ..   this.Create(doc);   AddTitleEvents(doc.getDocumentElement());   window.svgTitle = this;}Title.prototype.Create = function(doc){   this.rec = doc.createElement("rect");   this.rec.setAttribute("y", -0.9*Title.size);   this.rec.setAttribute("x", -0.25*Title.size);   this.rec.setAttribute("width", "1");   this.rec.setAttribute("height", 1.25*Title.size);   this.rec.setAttribute("style", "stroke:black;fill:#edefc2;stroke-width:1");   this.str = doc.createTextNode("");   this.txt = doc.createElement("text")   this.txt.setAttribute("style", "font-family:Arial; font-size:" + Title.size + ";fill:black;");   this.txt.appendChild(this.str);   this.grp = doc.createElement("g"),   this.grp.setAttribute("transform", "translate(0,0)");   this.grp.setAttribute("visibility", "hidden");   this.grp.appendChild(this.rec);   this.grp.appendChild(this.txt);   doc.getDocumentElement().appendChild(this.grp);}Title.Activate = function Title_Activate(evt) {	mouseLocX = evt.getClientX();	mouseLocY = evt.getClientY();		var currScale = svgSVGElement.currentScale;	var currTransX = svgSVGElement.currentTranslate.x;	var currTransY = svgSVGElement.currentTranslate.y;	var absoluteX = (mouseLocX - currTransX) / currScale;	var absoluteY = (mouseLocY - currTransY) / currScale;		var scaleAndTransform = "scale: " +  svgSVGElement.currentScale + "  translate: " + svgSVGElement.currentTranslate.x + "," + svgSVGElement.currentTranslate.y;	var mouseLocationTransformed = "mouseLocation (transformed): " + mouseLocX + "," + mouseLocY;	var mouseLocationAbsolute = "mouseLocation (absolute): " + absoluteX + "," + absoluteY;	var x = (evt.getClientX() - document.getDocumentElement().getCurrentTranslate().getX())/document.getDocumentElement().getCurrentScale() +  0.25*Title.size;	    var y = (evt.getClientY() - document.getDocumentElement().getCurrentTranslate().getY())/document.getDocumentElement().getCurrentScale() - Title.size;	window.svgTitle.element = evt.getCurrentTarget();	window.svgTitle.str.setNodeValue(TextOf(TitleElementOf(window.svgTitle.element)));	window.svgTitle.rec.setAttribute("width", window.svgTitle.txt.getComputedTextLength() + 0.5*Title.size);	window.svgTitle.grp.setAttribute("transform", "translate(" + x + "," + y + ")");	window.svgTitle.grp.setAttribute("visibility", "visible");}Title.Zoom = function Title_Zoom(evt) {   var newscl = evt.getTarget().getOwnerDocument().getDocumentElement().getCurrentScale();   Title.size *= Title.oldScale/newscl;   //alert ("Title.size: " + Title.size);   Title.oldScale = newscl;   window.svgTitle.rec.setAttribute("y", -0.9*Title.size);   window.svgTitle.rec.setAttribute("x", -0.25*Title.size);   window.svgTitle.rec.setAttribute("height", 1.25*Title.size);   window.svgTitle.rec.setAttribute("style", "stroke:black;fill:#edefc2;stroke-width:" + 1/document.getDocumentElement().getCurrentScale());   window.svgTitle.txt.setAttribute("style", "font-family:Arial; font-size:" + Title.size + ";fill:black;");}Title.Register = function Title_Register(elem) {   if (TitleElementOf(elem) != null)      elem.addEventListener("mousemove", Title.Activate, false);}// --- local helper functions ------------------------function TitleElementOf(elem) {   var childs = elem.getChildNodes();   for (var i=0; i<childs.getLength(); i++)      if (childs.item(i).getNodeType() == 1 && childs.item(i).getNodeName() == "title") // title element ..         return childs.item(i);      return null;}function TextOf(elem) {   var childs = elem ? elem.getChildNodes() : null;   for (var i=0; childs && i<childs.getLength(); i++)      if (childs.item(i).getNodeType() == 3) // text node ..         return childs.item(i).getNodeValue();      return "";}function AddTitleEvents(elem) {   var childs = elem.getChildNodes();   for (var i=0; i<childs.getLength(); i++)      if (childs.item(i).getNodeType() == 1) // element node ..         AddTitleEvents(childs.item(i));   if (TitleElementOf(elem) != null)      elem.addEventListener("mousemove", Title.Activate, false);}// === end ======================================================]]></script></svg>