; Mon Jul 27 18:55:15 GMT-06:00 2009
; 
;+ (version "3.3")
;+ (build "Build 418")


(defclass %3ACLIPS_TOP_LEVEL_SLOT_CLASS "Fake class to save top-level slot information"
	(is-a USER)
	(role abstract)
	(multislot ranks
		(type INSTANCE)
;+		(allowed-classes Rank)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot parentRank
		(type INSTANCE)
;+		(allowed-classes DefinedTerm)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot taxa
		(type INSTANCE)
;+		(allowed-classes Taxon)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot description
		(type INSTANCE)
;+		(allowed-classes DescriptionElement)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot associatedTo)
		(create-accessor read-write))
	(single-slot childRank
		(type INSTANCE)
;+		(allowed-classes DefinedTerm)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot parentTaxon
		(type INSTANCE)
;+		(allowed-classes DefinedTerm)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot predecessorRankOf
		(type INSTANCE)
;+		(allowed-classes Rank)
;+		(cardinality 0 1)
;+		(inverse-slot successorRankOf)
		(create-accessor read-write))
	(single-slot successorRankOf
		(type INSTANCE)
;+		(allowed-classes Rank)
;+		(cardinality 0 1)
;+		(inverse-slot predecessorRankOf)
		(create-accessor read-write))
	(single-slot taxon
		(type INSTANCE)
;+		(allowed-classes DefinedTerm)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot rank
		(type INSTANCE)
;+		(allowed-classes Rank)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot successorOf
		(type INSTANCE)
;+		(allowed-classes Taxon)
;+		(cardinality 0 1)
;+		(inverse-slot predecessorOf)
		(create-accessor read-write))
	(multislot predecessorOf
		(type INSTANCE)
;+		(allowed-classes Taxon)
;+		(inverse-slot successorOf)
		(create-accessor read-write))
	(single-slot childTaxon
		(type INSTANCE)
;+		(allowed-classes DefinedTerm)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot rankObject
		(type INSTANCE)
;+		(allowed-classes DefinedTerm)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Taxon
	(is-a DefinedTerm)
	(role concrete)
	(multislot description
		(type INSTANCE)
;+		(allowed-classes DescriptionElement)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot rank
		(type INSTANCE)
;+		(allowed-classes Rank)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot successorOf
		(type INSTANCE)
;+		(allowed-classes Taxon)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot predecessorOf
		(type INSTANCE)
;+		(allowed-classes Taxon)
		(create-accessor read-write)))

(defclass Rank
	(is-a DefinedTerm)
	(role concrete)
	(single-slot predecessorRankOf
		(type INSTANCE)
;+		(allowed-classes Rank)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot successorRankOf
		(type INSTANCE)
;+		(allowed-classes Rank)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass TaxonomicRanks
	(is-a Concept)
	(role concrete)
	(multislot ranks
		(type INSTANCE)
;+		(allowed-classes Rank)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot name_
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass TaxonomicHierarchy
	(is-a Concept)
	(role concrete)
	(multislot taxa
		(type INSTANCE)
;+		(allowed-classes Taxon)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot name_
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass IsSuccessorOf
	(is-a Predicate)
	(role concrete)
	(single-slot parentTaxon
		(type INSTANCE)
;+		(allowed-classes DefinedTerm)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot childTaxon
		(type INSTANCE)
;+		(allowed-classes DefinedTerm)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass IsPredecessorOf
	(is-a Predicate)
	(role concrete)
	(single-slot parentTaxon
		(type INSTANCE)
;+		(allowed-classes DefinedTerm)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot childTaxon
		(type INSTANCE)
;+		(allowed-classes DefinedTerm)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass IsRoot
	(is-a Predicate)
	(role concrete)
	(single-slot taxon
		(type INSTANCE)
;+		(allowed-classes DefinedTerm)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass IsSheet
	(is-a Predicate)
	(role concrete)
	(single-slot taxon
		(type INSTANCE)
;+		(allowed-classes DefinedTerm)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass IsParentOf
	(is-a Predicate)
	(role concrete)
	(single-slot parentRank
		(type INSTANCE)
;+		(allowed-classes DefinedTerm)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot childRank
		(type INSTANCE)
;+		(allowed-classes DefinedTerm)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass IsChildOf
	(is-a Predicate)
	(role concrete)
	(single-slot parentRank
		(type INSTANCE)
;+		(allowed-classes DefinedTerm)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot childRank
		(type INSTANCE)
;+		(allowed-classes DefinedTerm)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass IsRankRoot
	(is-a Predicate)
	(role concrete)
	(single-slot rankObject
		(type INSTANCE)
;+		(allowed-classes DefinedTerm)
;+		(cardinality 1 1)
		(create-accessor read-write)))